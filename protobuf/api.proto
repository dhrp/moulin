syntax = "proto3";

package API;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// The greeting service definition.
service API {

  rpc Healthz (google.protobuf.Empty) returns (StatusMessage) {
    option (google.api.http) = {
      get: "/healthz"
    };
  }

  rpc PushTask (Task) returns (StatusMessage) {
    option (google.api.http) = {
      post: "/v1/queue/{queueID}"
      body: "*"
    };
  }

  rpc LoadTask (RequestMessage) returns (Task) {
    option (google.api.http) = {
      get: "/v1/queue/{queueID}"
    };
  }

  rpc HeartBeat (Task) returns (StatusMessage) {
    option (google.api.http) = {
      put: "/v1/queue/{queueID}/{taskID}"
    };
  }

  rpc Complete (Task) returns (StatusMessage) {
    option (google.api.http) = {
      put: "/v1/queue/{queueID}/{taskID}"
    };
  }

}

enum Status {
    SUCCESS = 0;
    FAILURE = 1;
    UNKNOWN = 2;
}

// Task is the definition of a task
message Task {
  // reserved 1; // we took queueID out
  // reserved "queueID";
  string queueID = 1;       // needed to pass the queueID to push task to
  string taskID = 2;
  string body = 3;          // perhaps should be called argument(s)
  repeated string envs = 4;
  int32 expirationSec = 5;  // this is used to heartbeat
}

message Meta {
  string queueID = 1;
}

message RequestMessage {
  string queueID = 1;
  int32 expirationSec = 2;
}

message StatusMessage {
  Status status = 1;
  string detail = 2;
}
